@Article{ NaMeGaBrMaEb2019.1,
author = {Naumchev, Alexandr and Meyer, Bertrand and Mazzara, Manuel and Galinier, Florian and Bruel, Jean-Michel and Ebersold, Sophie},
title = "{AutoReq: expressing and verifying requirements for control systems}",
journal = {Journal of Visual Languages and Computing},
publisher = {Elsevier},
address = {http://www.elsevier.com/},
year = {2019},
month = {apr},
volume = {51},
pages = {131--142},
language = {anglais},
URL = {https://doi.org/10.1016/j.cola.2019.02.004 - https://oatao.univ-toulouse.fr/26171/},
keywords = {AutoReq, seamless requirements, Design by Contract, AutoProof, Eiffel, Landing Gear System, specification drivers, multirequirements},
abstract = {The considerable effort of writing requirements is only worthwhile if the result meets two conditions: the requirements reflect stakeholders' needs, and the implementation satisfies them. In usual approaches, the use of different notations for requirements (often natural language) and implementations (a programming language) makes both conditions elusive. AutoReq, presented in this article, takes a different approach to both the writing of requirements and their verification. Applying the approach to a well-documented example, a landing gear system, allowed for a mechanical proof of consistency and uncovered an error in a published discussion of the problem.}
}
@Article{ ObPaBrLu2018.1,
author = {Ober, Ileana and Palyart, Marc and Bruel, Jean-Michel and Lugato, David},
title = "{On the Use of Models for High-Performance Scientific Computing Applications: an Experience Report}",
journal = {International Journal on Software and Systems Modeling},
publisher = {Springer-Verlag},
address = {https://www.springer.com/de},
year = {2018},
month = {feb},
volume = {17},
number = {1},
pages = {319--342},
language = {anglais},
URL = {https://doi.org/10.1007/s10270-016-0518-0 - https://oatao.univ-toulouse.fr/22025/},
keywords = {HPC, High-performance calculus, MDE Model-driven engineering, Architecture, Fortran},
abstract = {This paper reports on a four-year project that aims to raise the abstraction level through the use of model-driven engineering (MDE) techniques in the development of scientific applications relying on high-performance computing. The development and maintenance of high-performance scientific computing software is reputedly a complex task. This complexity results from the frequent evolutions of supercomputers and the tight coupling between software and hardware aspects. Moreover, current parallel programming approaches result in a mixing of concerns within the source code. Our approach relies on the use of MDE and consists in defining domain-specific modeling languages targeting various domain experts involved in the development of HPC applications, allowing each of them to handle their dedicated model in a both user-friendly and hardware-independent way. The different concerns are separated thanks to the use of several models as well as several modeling viewpoints on these models. Depending on the targeted execution platforms, these abstract models are translated into executable implementations by means of model transformations. To make all of these effective, we have developed a tool chain that is also presented in this paper. The approach is assessed through a multi-dimensional validation that focuses on its applicability, its expressiveness and its efficiency. To capitalize on the gained experience, we analyze some lessons learned during this project.}
}
@InProceedings{ BaObBr2020.1,
author = {Baduel, Ronan and Ober, Iulian and Bruel, Jean-Michel},
title = "{Modeling and verification method for an early evaluation of Systems of Systems interactions (regular paper)}",
booktitle = "{ACM Symposium on Applied Computing (SAC 2020), Brno, Czech Republic, 30/03/2020-03/04/2020}",
year = {2020},
month = {mar},
publisher = {ACM : Association for Computing Machinery},
address = {https://www.acm.org/},
pages = {(on line)},
language = {anglais},
URL = {https://www.irit.fr/~Iulian.Ober/docs/SAC2020.pdf,%20https://doi.org/10.1145/3341105.3373944 - https://oatao.univ-toulouse.fr/26362/},
abstract = {This paper presents the results achieved while pursuing the verification and validation of a train system behavior at the first steps of development in an industrial context. At this stage, and at least from the industrial point of view, the train can be considered as a System of Systems (SoS). A method is proposed, supported by preliminary results through the definition and verification of constrained states and preconditions to use cases, as well as a structure for the behavior.}
}