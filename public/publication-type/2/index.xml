<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2 | Jean-Michel Bruel</title>
    <link>https://jmbruell.netlify.app/publication-type/2/</link>
      <atom:link href="https://jmbruell.netlify.app/publication-type/2/index.xml" rel="self" type="application/rss+xml" />
    <description>2</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2025 - ACDC. Last update: May 2nd, 2025</copyright><lastBuildDate>Fri, 01 Mar 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jmbruell.netlify.app/media/icon_hu_1b4bcfdf7d67b990.png</url>
      <title>2</title>
      <link>https://jmbruell.netlify.app/publication-type/2/</link>
    </image>
    
    <item>
      <title>Identifying and fixing ambiguities in, and semantically accurate formalisation of, behavioural requirements</title>
      <link>https://jmbruell.netlify.app/publication/nguyen-hal-04525414/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/nguyen-hal-04525414/</guid>
      <description>&lt;p&gt;To correctly formalise requirements expressed in natural language, ambiguities must first be identified and then fixed. This paper focuses on behavioural requirements (i.e. requirements related to dynamic aspects and phenomena). Its first objective is to show, based on a practical, public case study, that the disambiguation process cannot be fully automated: even though natural language processing (NLP) tools and machine learning might help in the identification of ambiguities, fixing them often requires a deep, application-specific understanding of the reasons of being of the system of interest, of the characteristics of its environment, of which trade-offs between conflicting objectives are acceptable, and of what is achievable and what is not; it may also require arduous negotiations between stakeholders. Such an understanding and consensus-making ability is not in the reach of current tools and technologies, and will likely remain so for a long while. Beyond ambiguity, requirements are often marred by various other types of defects that could lead to wholly unacceptable consequences. In particular, operational experience shows that requirements inadequacy (whereby, in some of the situations the system could face, what is required is woefully inappropriate or what is necessary is left unspecified) is a significant cause for systems failing to meet expectations. The second objective of this paper is to propose a semantically accurate behavioural requirements formalisation format enabling tool-supported requirements verification, notably with simulation. Such support is necessary for the engineering of large and complex cyber-physical and socio-technical systems to ensure, first, that the specified requirements indeed reflect the true intentions of their authors and second, that they are adequate for all the situations the system could face. To that end, the paper presents an overview of the BASAALT (Behaviour Analysis and Simulation All Along systems Life Time) systems engineering method, and of FORM-L (FOrmal Requirements Modelling Language), its supporting language, which aims at representing as accurately and completely as possible the semantics expressed in the original, natural language behavioural requirements, and is markedly different from languages intended for software code generation. The paper shows that generally, semantically accurate formalisation is not a simple paraphrasing of the original natural language requirements: additional elements are often needed to fully and explicitly reflect all that is implied in natural language. To provide such complements for the case study presented in the paper, we had to follow different formalisation patterns, i.e. sequences of formalisation steps. For this paper, to avoid being skewed by what a particular automatic tool can and cannot do, BASAALT and FORM-L were applied manually. Still, the lessons learned could be used to specify and develop NLP tools that could assist the disambiguation and formalisation processes. However, more studies are needed to determine whether an exhaustive set of formalisation patterns can be identified to fully automate the formalisation process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Object-Oriented Requirements: a Unified Framework for Specifications, Scenarios and Tests</title>
      <link>https://jmbruell.netlify.app/publication/jot-issue-2023-01-article-3/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/jot-issue-2023-01-article-3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Artificial Intelligence Capabilities for Effective Model‐Based Systems Engineering: A Vision Paper</title>
      <link>https://jmbruell.netlify.app/publication/incose-2022/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/incose-2022/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Special Issue on New Paradigms of Software Production and Deployment</title>
      <link>https://jmbruell.netlify.app/publication/dblp-journalssncs-capozucca-bmm-22/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/dblp-journalssncs-capozucca-bmm-22/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The Role of Formalism in System Requirements</title>
      <link>https://jmbruell.netlify.app/publication/acm-surveys-2021/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/acm-surveys-2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Model-Driven Engineering for End-Users in the Loop in Smart Ambient Systems</title>
      <link>https://jmbruell.netlify.app/publication/jucs-2021/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/jucs-2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Hitchhiker’s Guide to Model-Driven Engineering for Data-Centric Systems</title>
      <link>https://jmbruell.netlify.app/publication/9094197/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/9094197/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Comparing and classifying model transformation reuse approaches across metamodels</title>
      <link>https://jmbruell.netlify.app/publication/dblp-journalssosym-bruel-cgjklmsv-20/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/dblp-journalssosym-bruel-cgjklmsv-20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Toward model-driven sustainability evaluation</title>
      <link>https://jmbruell.netlify.app/publication/dblp-journalscacm-kienzle-mcbbbbbc-20/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/dblp-journalscacm-kienzle-mcbbbbbc-20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AutoReq: expressing and verifying requirements for control systems</title>
      <link>https://jmbruell.netlify.app/publication/na-me-ga-br-ma-eb-2019-1/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/na-me-ga-br-ma-eb-2019-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>On the Use of Models for High-Performance Scientific Computing Applications: an Experience Report</title>
      <link>https://jmbruell.netlify.app/publication/ob-pa-br-lu-2018-1/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/ob-pa-br-lu-2018-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A contract-based method to specify stimulus-response requirements</title>
      <link>https://jmbruell.netlify.app/publication/mmbge17/</link>
      <pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://jmbruell.netlify.app/publication/mmbge17/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
